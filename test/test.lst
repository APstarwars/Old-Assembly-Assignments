     1                                 %line 1+1 test.asm
     2                                 
     3                                 [section .data]
     4                                 [extern printMSG]
     5                                 [extern exitNormal]
     6                                 [extern printRAX]
     7                                 [extern printRBX]
     8                                 [extern printRCX]
     9                                 [extern printRDX]
    10                                 [extern printABCD]
    11                                 [extern getByteArray]
    12                                 [extern printByteArray]
    13                                 [extern printEndl]
    14 00000000 57656C636F6D652074-    startPrompt db "Welcome to the amazing dice game, press enter to start "
    15 00000000 6F2074686520616D61-
    16 00000000 7A696E672064696365-
    17 00000000 2067616D652C207072-
    18 00000000 65737320656E746572-
    19 00000000 20746F207374617274-
    20 00000000 20                 
    21 00000037 3600000000000000       startPromptLen dq 54
    22 0000003F 456E74657220616E79-    rerollPrompt db "Enter any numbers you want to keep "
    23 0000003F 206E756D6265727320-
    24 0000003F 796F752077616E7420-
    25 0000003F 746F206B65657020   
    26 00000062 2300000000000000       rerollPromptLen dq 35
    27                                 
    28                                 [section .bss]
    29 00000000 <gap>                  roll resb 5
    30 00000005 <gap>                  die resb 1
    31 00000006 <gap>                  reroll resb 5
    32                                 
    33                                 
    34                                 [section .text]
    35                                 
    36                                 [global _start]
    37                                 
    38                                 _start:
    39                                 
    40 00000000 48C7C70D000000          mov rdi, 0xd
    41 00000007 E8(F6FFFFFF)            call printMSG
    42 0000000C 48C7C700000000          mov rdi, 0x0
    43 00000013 E8(F6FFFFFF)            call printMSG
    44                                 
    45                                 
    46                                 
    47 00000018 48C7C6[00000000]        mov rsi, startPrompt
    48 0000001F 8A1425[00000000]        mov dl, [startPromptLen]
    49 00000026 E8(F6FFFFFF)            call printByteArray
    50 0000002B E8(F6FFFFFF)            call printEndl
    51                                 
    52 00000030 E8(F6FFFFFF)            call getByteArray
    53                                 
    54                                 
    55 00000035 48C7C105000000          mov rcx, 5
    56                                  rollTheDice:
    57 0000003C 480FC7F0                rdrand rax
    58 00000040 4831D2                  xor rdx, rdx
    59 00000043 48C7C306000000          mov rbx, 6
    60 0000004A 48F7F3                  div rbx
    61 0000004D 48FFC2                  inc rdx
    62 00000050 E8(F6FFFFFF)            call printRDX
    63 00000055 8891[FFFFFFFF]          mov byte [roll+rcx-1], dl
    64 0000005B 4883F900                cmp rcx, 0
    65 0000005F 75D9                    jne rollTheDice
    66                                 
    67                                 
    68 00000061 48C7C105000000          mov rcx, 5
    69                                  displayDice:
    70 00000068 8A81[FFFFFFFF]          mov al, byte [roll+rcx-1]
    71 0000006E 0430                    add al, 0x30
    72 00000070 880425[00000000]        mov byte [die], al
    73 00000077 48C7C6[00000000]        mov rsi, die
    74 0000007E 48C7C201000000          mov rdx, 0x1
    75 00000085 E8(F6FFFFFF)            call printByteArray
    76 0000008A 4883F900                cmp rcx, 0
    77 0000008E 75D6                    jne displayDice
    78                                 
    79 00000090 E8(F6FFFFFF)            call printEndl
    80                                 
    81                                 
    82 00000095 48C7C6[00000000]        mov rsi, rerollPrompt
    83 0000009C 8A1425[00000000]        mov dl, [rerollPromptLen]
    84 000000A3 E8(F6FFFFFF)            call printByteArray
    85 000000A8 E8(F6FFFFFF)            call printEndl
    86                                 
    87                                 
    88 000000AD 48C7C6[00000000]        mov rsi, reroll
    89 000000B4 B205                    mov dl, 0x5
    90 000000B6 E8(F6FFFFFF)            call getByteArray
    91                                 
    92                                 
    93                                 
    94                                 
    95 000000BB E8(F6FFFFFF)            call exitNormal
